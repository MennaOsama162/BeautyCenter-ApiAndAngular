// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BeautyCenter_.Net_Angular.Models;

public partial class BeautyCenterContext : DbContext
{
    public BeautyCenterContext()
    {
    }

    public BeautyCenterContext(DbContextOptions<BeautyCenterContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Package> Packages { get; set; }

    public virtual DbSet<PackageUser> PackageUsers { get; set; }

    public virtual DbSet<ServiceResponse> Services { get; set; }

    public virtual DbSet<UserService> UserServices { get; set; }

    public virtual DbSet<Userr> Userrs { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Package>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Package__3214EC07248648F6");

            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<PackageUser>(entity =>
        {
            entity.HasKey(e => new { e.UserId, e.PackageId }).HasName("PK__PackageU__C4AACF105C96DED6");

            entity.HasOne(d => d.Package).WithMany(p => p.PackageUsers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PackageUs__Packa__4D94879B");

            entity.HasOne(d => d.User).WithMany(p => p.PackageUsers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PackageUs__UserI__4CA06362");
        });

        modelBuilder.Entity<ServiceResponse>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__service__3214EC07AC3A8DFE");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasMany(d => d.Packages).WithMany(p => p.Services)
                .UsingEntity<Dictionary<string, object>>(
                    "PackageService",
                    r => r.HasOne<Package>().WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageSe__Packa__49C3F6B7"),
                    l => l.HasOne<ServiceResponse>().WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageSe__Servi__48CFD27E"),
                    j =>
                    {
                        j.HasKey("ServiceId", "PackageId").HasName("PK__PackageS__1639B356D184A2A3");
                        j.ToTable("PackageService");
                    });
        });

        modelBuilder.Entity<UserService>(entity =>
        {
            entity.HasKey(e => new { e.UserId, e.ServiceId }).HasName("PK__UserServ__ABD9774C00F625B5");

            entity.HasOne(d => d.Service).WithMany(p => p.UserServices)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserServi__Servi__5165187F");

            entity.HasOne(d => d.User).WithMany(p => p.UserServices)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserServi__UserI__5070F446");
        });

        modelBuilder.Entity<Userr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Userr__3214EC078FDE00C4");

            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}